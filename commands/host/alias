#!/usr/bin/env bash
#ddev-generated

# Load aliases from the aliases.yaml file
ALIASES_FILE=".ddev/aliases.yaml"

if [ ! -f "$ALIASES_FILE" ]; then
  echo "Aliases file not found: $ALIASES_FILE"
  exit 1
fi

# Parse flags
case "$1" in
  --help | -h)
    echo "Usage: ddev alias [<option>] [alias]"
    echo
    echo "Aliases:"
    cat "$ALIASES_FILE" | yq '. | keys | .[]'
    echo
    echo "Options:"
    echo "  --list, -l          List all aliases"
    echo "  --create, --add     Create a new alias"
    echo "  --remove, --delete  Remove an alias"
    echo "  --help, -h          Show this help message"
    echo
    exit 0
    ;;
  --list | -l)
    cat "$ALIASES_FILE" | yq -Y
    exit 0
    ;;
  --create | --add)
    new_alias_name=$2
    new_container=$3
    new_command="${@:4}"
    if [ -z "$new_alias_name" ] || [ -z "$new_container" ] || [ -z "$new_command" ]; then
      echo "Usage: ddev alias --create <alias_name> <container> <command>"
      exit 1
    fi
    yq -y -i ".\"$new_alias_name\".container = \"$new_container\"" "$ALIASES_FILE"
    yq -y -i ".\"$new_alias_name\".command = \"$new_command\"" "$ALIASES_FILE"
    echo "Alias '$new_alias_name' created."
    exit 0
    ;;
  --remove | --delete)
    remove_alias_name=$2
    if [ -z "$remove_alias_name" ]; then
      echo "Usage: ddev alias --remove <alias_name>"
      exit 1
    fi
    yq -y -i "del(."$remove_alias_name")" "$ALIASES_FILE"
    echo "Alias '$remove_alias_name' removed."
    exit 0
    ;;
esac

alias_name=$1

if [ -z "$alias_name" ]; then
  echo "Usage: ddev alias <name> | -h"
  exit 1
fi




container=$(cat "$ALIASES_FILE" | yq ".${alias_name}.container")
command=$(cat "$ALIASES_FILE" | yq ".${alias_name}.command")

if [ "$container" == null ] || [ "$command" == null ]; then
  echo "Alias '$alias_name' not found or incomplete in $ALIASES_FILE"
  exit 0
fi
echo "Executing in $container: $command"
eval ddev exec -s "$container" "$command"